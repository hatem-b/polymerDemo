describe("Toasts:",function(){var t,e=375,a=300;describe("Toast javascript functions",function(){it("should display and remove a toast",function(s){Materialize.toast("Test toast",a),setTimeout(function(){t=$(".toast"),expect(t.length).toBe(1),expect(t).toBeVisible(),expect(t.text()).toBe("Test toast"),setTimeout(function(){t=$(".toast"),expect(t).toBeVisible(),expect(t.length).toBe(1,"because toast duration still on going"),setTimeout(function(){t=$(".toast"),expect(t.length).toBe(0,"because toast should be removed by now"),s()},e+90)},10)},a)}),it("Opens a toast with HTML content",function(){var e=$("<span>I am toast content</span>");Materialize.toast(e,400),t=$(".toast"),expect(t.first("span").text()).toBe("I am toast content"),expect(t.first("span").text()).not.toBe("I am toast")}),it("Toasts should call the callback function when dismissed",function(t){var e={wasCalled:!1},a=function(){e.wasCalled=!0};Materialize.toast("I am a toast",100,"",a),setTimeout(function(){expect(e.wasCalled).toBe(!0,"because the callback set it to true"),t()},500)}),it("Apply two custom class to a toast",function(){Materialize.toast("Hi",400,"round flat"),t=$(".toast"),expect(t.closest(".round.flat").length).toBe(1,"because the class parameter was passed with two classes")})})});